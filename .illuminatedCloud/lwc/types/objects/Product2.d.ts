// DO NOT EDIT: This file is managed by Illuminated Cloud. Any external changes will be discarded.

declare interface Product2 extends SObject 
{
    ActivityHistories?: ActivityHistory[];
    Assets?: Asset[];
    AttachedContentDocuments?: AttachedContentDocument[];
    Attachments?: Attachment[];
    CanUseRevenueSchedule?: boolean;
    CombinedAttachments?: CombinedAttachment[];
    ContentDocumentLinks?: ContentDocumentLink[];
    ContextRecord?: FlowExecutionErrorEvent;
    CreatedBy?: User;
    CreatedById?: string;
    CreatedDate?: string;
    Description?: string;
    DisplayUrl?: string;
    Emails?: EmailMessage[];
    EventRelations?: EventRelation[];
    Events?: Event[];
    ExternalDataSource?: ExternalDataSource;
    ExternalDataSourceId?: string;
    ExternalId?: string;
    Family?: string;
    Feeds?: Product2Feed[];
    FeedSubscriptionsForEntity?: EntitySubscription[];
    FirstPublishLocation?: ContentVersion;
    FlowOrchestrationWorkItems?: FlowOrchestrationWorkItem[];
    Histories?: Product2History[];
    IsActive?: boolean;
    IsArchived?: boolean;
    IsDeleted?: boolean;
    LastModifiedBy?: User;
    LastModifiedById?: string;
    LastModifiedDate?: string;
    LastReferencedDate?: string;
    LastViewedDate?: string;
    LinkedEntity?: ContentDocumentLinkChangeEvent;
    ListEmails?: ListEmail[];
    Name?: string;
    NetworkUserHistoryRecentToRecord?: NetworkUserHistoryRecent[];
    Notes?: Note[];
    NotesAndAttachments?: NoteAndAttachment[];
    NumberOfRevenueInstallments?: number;
    OpenActivities?: OpenActivity[];
    Parent?: FeedComment;
    ParentEntities?: NetworkActivityAudit[];
    ParentRecord?: NetworkFeedResponseMetric;
    PricebookEntries?: PricebookEntry[];
    ProcessInstances?: ProcessInstance[];
    ProcessSteps?: ProcessInstanceHistory[];
    Product2?: AssetChangeEvent;
    ProductCode?: string;
    ProductConsumptionSchedules?: ProductConsumptionSchedule[];
    QuantityUnitOfMeasure?: string;
    Record?: ObjectMetadataTag;
    RecordActionHistories?: RecordActionHistory[];
    RecordActions?: RecordAction[];
    RelatedRecord?: FlowRecordRelation;
    RelatedTo?: EmailMessageChangeEvent;
    Relation?: EventRelationChangeEvent;
    RevenueInstallmentPeriod?: string;
    RevenueScheduleType?: string;
    StockKeepingUnit?: string;
    Subject?: SurveySubjectChangeEvent;
    SurveySubjectEntities?: SurveySubject[];
    SystemModstamp?: string;
    TargetObject?: PendingServiceRoutingInteractionInfo;
    TaskRelations?: TaskRelation[];
    Tasks?: Task[];
    What?: EventChangeEvent;
}